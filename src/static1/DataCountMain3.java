package static1;

public class DataCountMain3 {

    public static void main(String[] args) {
        Data3 data1 = new Data3("A");
        System.out.println("A count = " + Data3.count);
        /* data1.count 아니고 Data3.count!!
         * 클래스에 직접 접근하는 느낌으로
         */

        Data3 data2 = new Data3("B");
        System.out.println("B count = " + Data3.count);

        Data3 data3 = new Data3("C");
        System.out.println("C count = " + Data3.count);

        /* 추가
         * 둘의 차이는 없다. 결과적으로 정적 변수에 접근한다.
         * 하지만 정적 변수에 인스턴스를 통한 접근을 추천하지 않는다.
         * 코드를 읽을 때 마치 인스턴스 변수에 접근하는 것으로 오해할 수 있기 때문이다.
         * (코드를 작성하는 것보다 가져와서 쓸때는 고려하는 것이 바람직하다.)
         */
        // 인스턴스를 통한 접근
        Data3 data4 = new Data3("D");
        System.out.println(data4.count);

        // 클래스를 통한 접근
        System.out.println(Data3.count);
    }
}

/* 멤버 변수(핗드)의 종류
 * 1. 인스턴스 변수 : static이 붙지 않은 멤버 변수
 *    - 인스턴스 변수는 인스턴스를 생성해야 사용할 수 있고, 인스턴스에 소속되어 있다.
 *    - 인스턴스 변수는 인스턴스를 만들 때 마다 새로 만들어진다.
 * 2. 클래스 변수 : static이 붙은 멤버 변수
 *    - 클래스 변수, 정적 변수, static 변수 등으로 부른다. (용어 모두 사용하니 알아두자)
 *    - 정적 변수는 인스턴스와 무관하게 클래스에 바로 접근해서 사용할 수 있고, 클래스 자체에 소속되어 있다.
 *    - static 변수는 자바 프로그램을 시작할 때 딱 1개 만들어진다. 보통 여러곳에서 공유하는 목적으로 사용된다.
 *
 *
 * 변수와 생명주기
 * 1. 지역 변수(매개변수 포함)
 *    - 스택 영역에 있는 스택 프레임 안에 보관된다.
 *      메서드가 종료되면 스택 프레임도 제거되는데 이때 스택 프레임에 포함된 지역변수도 함께 제거된다.
 *      따라서 지역변수는 생명주기가 짧다.
 * 2. 인스턴스 변수
 *    - 인스턴스 변수는 힙 영역을 사용한다.
 *      힙 영역은 GC(가비지 컬렉션)가 발생하기 전까지는 생존하기 때문에 보통 지역변수보다 생존 주기가 길다.
 * 3. 클래스 변수
 *    - 메서드 영역의 static 영역에 보관된다. 메서드 영역은 프로그램 전체에서 사용하는 공용 공간이다.
 *      클래스 변수는 해당 클래스가 JVM에 로딩되는 순간 생성되어 JVM이 종료될 때까지 생명주기가 이어진다.
 *      따라서 가장 긴 생명주기를 가진다.
 */
